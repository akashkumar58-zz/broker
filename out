Creating service instance my-book-app-service in org cloudfoundry / space development as admin...
FAILED
Server error, status code: 502, error code: 10001, message: The service broker returned an invalid response for the request to http://service-broker.bosh-lite.com/v2/service_instances/553b98be-caec-4d93-8941-0ce496ab2804?accepts_incomplete=true. Status Code: 500 Internal Server Error, Body: 
<!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <meta name="robots" content="NONE,NOARCHIVE">
  <title>ImproperlyConfigured at /v2/service_instances/553b98be-caec-4d93-8941-0ce496ab2804</title>
  <style type="text/css">
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font:small sans-serif; }
    body>div { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; }
    h2 { margin-bottom:.8em; }
    h2 span { font-size:80%!!(MISSING);(MISSING) color:#666; font-weight:normal; }
    h3 { margin:1em 0 .5em 0; }
    h4 { margin:0 0 .5em 0; font-weight: normal; }
    code, pre { font-size: 100%!!(MISSING);(MISSING) white-space: pre-wrap; }
    table { border:1px solid #ccc; border-collapse: collapse; width:100%!!(MISSING);(MISSING) background:white; }
    tbody td, tbody th { vertical-align:top; padding:2px 3px; }
    thead th {
      padding:1px 6px 1px 3px; background:#fefefe; text-align:left;
      font-weight:normal; font-size:11px; border:1px solid #ddd;
    }
    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }
    table.vars { margin:5px 0 2px 40px; }
    table.vars td, table.req td { font-family:monospace; }
    table td.code { width:100%!!(MISSING);(MISSING) }
    table td.code pre { overflow:hidden; }
    table.source th { color:#666; }
    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }
    ul.traceback { list-style-type:none; color: #222; }
    ul.traceback li.frame { padding-bottom:1em; color:#666; }
    ul.traceback li.user { background-color:#e0e0e0; color:#000 }
    div.context { padding:10px 0; overflow:hidden; }
    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }
    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; padding-left: 2px; }
    div.context ol li pre { display:inline; }
    div.context ol.context-line li { color:#505050; background-color:#dfdfdf; padding: 3px 2px; }
    div.context ol.context-line li span { position:absolute; right:32px; }
    .user div.context ol.context-line li { background-color:#bbb; color:#000; }
    .user div.context ol li { color:#666; }
    div.commands { margin-left: 40px; }
    div.commands a { color:#555; text-decoration:none; }
    .user div.commands a { color: black; }
    #summary { background: #ffc; }
    #summary h2 { font-weight: normal; color: #666; }
    #explanation { background:#eee; }
    #template, #template-not-exist { background:#f6f6f6; }
    #template-not-exist ul { margin: 0 0 10px 20px; }
    #template-not-exist .postmortem-section { margin-bottom: 3px; }
    #unicode-hint { background:#eee; }
    #traceback { background:#eee; }
    #requestinfo { background:#f6f6f6; padding-left:120px; }
    #summary table { border:none; background:transparent; }
    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }
    #requestinfo h3 { margin-bottom:-1em; }
    .error { background: #ffc; }
    .specific { color:#cc3300; font-weight:bold; }
    h2 span.commands { font-size:.7em;}
    span.commands a:link {color:#5E5694;}
    pre.exception_value { font-family: sans-serif; color: #666; font-size: 1.5em; margin: 10px 0 10px 0; }
    .append-bottom { margin-bottom: 10px; }
  </style>
  
  <script type="text/javascript">
  //<!--
    function getElementsByClassName(oElm, strTagName, strClassName){
        // Written by Jonathan Snook, http://www.snook.ca/jon; Add-ons by Robert Nyman, http://www.robertnyman.com
        var arrElements = (strTagName == "*" && document.all)? document.all :
        oElm.getElementsByTagName(strTagName);
        var arrReturnElements = new Array();
        strClassName = strClassName.replace(/\-/g, "\-");
        var oRegExp = new RegExp("(^|\s)" + strClassName + "(\s|$)");
        var oElement;
        for(var i=0; i<arrElements.length; i++){
            oElement = arrElements[i];
            if(oRegExp.test(oElement.className)){
                arrReturnElements.push(oElement);
            }
        }
        return (arrReturnElements)
    }
    function hideAll(elems) {
      for (var e = 0; e < elems.length; e++) {
        elems[e].style.display = 'none';
      }
    }
    window.onload = function() {
      hideAll(getElementsByClassName(document, 'table', 'vars'));
      hideAll(getElementsByClassName(document, 'ol', 'pre-context'));
      hideAll(getElementsByClassName(document, 'ol', 'post-context'));
      hideAll(getElementsByClassName(document, 'div', 'pastebin'));
    }
    function toggle() {
      for (var i = 0; i < arguments.length; i++) {
        var e = document.getElementById(arguments[i]);
        if (e) {
          e.style.display = e.style.display == 'none' ? 'block': 'none';
        }
      }
      return false;
    }
    function varToggle(link, id) {
      toggle('v' + id);
      var s = link.getElementsByTagName('span')[0];
      var uarr = String.fromCharCode(0x25b6);
      var darr = String.fromCharCode(0x25bc);
      s.innerHTML = s.innerHTML == uarr ? darr : uarr;
      return false;
    }
    function switchPastebinFriendly(link) {
      s1 = "Switch to copy-and-paste view";
      s2 = "Switch back to interactive view";
      link.innerHTML = link.innerHTML.trim() == s1 ? s2: s1;
      toggle('browserTraceback', 'pastebinTraceback');
      return false;
    }
    //-->
  </script>
  
</head>
<body>
<div id="summary">
  <h1>ImproperlyConfigured at /v2/service_instances/553b98be-caec-4d93-8941-0ce496ab2804</h1>
  <pre class="exception_value">Field name `service_instance_id` is not valid for model `ServiceRecord`.</pre>
  <table class="meta">

    <tr>
      <th>Request Method:</th>
      <td>PUT</td>
    </tr>
    <tr>
      <th>Request URL:</th>
      <td>http://service-broker.bosh-lite.com/v2/service_instances/553b98be-caec-4d93-8941-0ce496ab2804?accepts_incomplete=true</td>
    </tr>

    <tr>
      <th>Django Version:</th>
      <td>1.9.6</td>
    </tr>

    <tr>
      <th>Exception Type:</th>
      <td>ImproperlyConfigured</td>
    </tr>


    <tr>
      <th>Exception Value:</th>
      <td><pre>Field name `service_instance_id` is not valid for model `ServiceRecord`.</pre></td>
    </tr>


    <tr>
      <th>Exception Location:</th>
      <td>/home/vcap/deps/0/python/lib/python3.5/site-packages/rest_framework/serializers.py in build_unknown_field, line 1182</td>
    </tr>

    <tr>
      <th>Python Executable:</th>
      <td>/home/vcap/deps/0/bin/python</td>
    </tr>
    <tr>
      <th>Python Version:</th>
      <td>3.5.5</td>
    </tr>
    <tr>
      <th>Python Path:</th>
      <td><pre>[&#39;/home/vcap/app&#39;,
 &#39;/home/vcap/deps/0/python/bin&#39;,
 &#39;/home/vcap/deps/0&#39;,
 &#39;/home/vcap/deps/0/python/lib/python35.zip&#39;,
 &#39;/home/vcap/deps/0/python/lib/python3.5&#39;,
 &#39;/home/vcap/deps/0/python/lib/python3.5/plat-linux&#39;,
 &#39;/home/vcap/deps/0/python/lib/python3.5/lib-dynload&#39;,
 &#39;/home/vcap/deps/0/python/lib/python3.5/site-packages&#39;,
 &#39;/home/vcap/deps/0/python/lib/python3.5/site-packages/setuptools-39.0.1-py3.5.egg&#39;,
 &#39;/home/vcap/deps/0/python/lib/python3.5/site-packages/pip-9.0.3-py3.5.egg&#39;]</pre></td>
    </tr>
    <tr>
      <th>Server time:</th>
      <td>Tue, 15 May 2018 10:42:31 +0000</td>
    </tr>
  </table>
</div>




<div id="traceback">
  <h2>Traceback <span class="commands"><a href="#" onclick="return switchPastebinFriendly(this);">
    Switch to copy-and-paste view</a></span>
  </h2>
  
  <div id="browserTraceback">
    <ul class="traceback">
      
        
        <li class="frame django">
          <code>/home/vcap/deps/0/python/lib/python3.5/site-packages/django/core/handlers/base.py</code> in <code>get_response</code>

          
            <div class="context" id="c139638680065480">
              
                <ol start="142" class="pre-context" id="pre139638680065480">
                
                  <li onclick="toggle('pre139638680065480', 'post139638680065480')"><pre>                        break</pre></li>
                
                  <li onclick="toggle('pre139638680065480', 'post139638680065480')"><pre></pre></li>
                
                  <li onclick="toggle('pre139638680065480', 'post139638680065480')"><pre>            if response is None:</pre></li>
                
                  <li onclick="toggle('pre139638680065480', 'post139638680065480')"><pre>                wrapped_callback = self.make_view_atomic(callback)</pre></li>
                
                  <li onclick="toggle('pre139638680065480', 'post139638680065480')"><pre>                try:</pre></li>
                
                  <li onclick="toggle('pre139638680065480', 'post139638680065480')"><pre>                    response = wrapped_callback(request, *callback_args, **callback_kwargs)</pre></li>
                
                  <li onclick="toggle('pre139638680065480', 'post139638680065480')"><pre>                except Exception as e:</pre></li>
                
                </ol>
              
              <ol start="149" class="context-line">
                <li onclick="toggle('pre139638680065480', 'post139638680065480')"><pre>
                    response = self.process_exception_by_middleware(e, request)</pre> <span>...</span></li></ol>
              
                <ol start='150' class="post-context" id="post139638680065480">
                  
                  <li onclick="toggle('pre139638680065480', 'post139638680065480')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139638680065480', 'post139638680065480')"><pre>            # Complain if the view returned None (a common error).</pre></li>
                  
                  <li onclick="toggle('pre139638680065480', 'post139638680065480')"><pre>            if response is None:</pre></li>
                  
                  <li onclick="toggle('pre139638680065480', 'post139638680065480')"><pre>                if isinstance(callback, types.FunctionType):    # FBV</pre></li>
                  
                  <li onclick="toggle('pre139638680065480', 'post139638680065480')"><pre>                    view_name = callback.__name__</pre></li>
                  
                  <li onclick="toggle('pre139638680065480', 'post139638680065480')"><pre>                else:                                           # CBV</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '139638680065480')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v139638680065480">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>urlconf</td>
                    <td class="code"><pre>&#39;broker.urls&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>wrapped_callback</td>
                    <td class="code"><pre>&lt;function WrappedAPIView at 0x7f0029f34d90&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>middleware_method</td>
                    <td class="code"><pre>&lt;bound method CsrfViewMiddleware.process_view of &lt;django.middleware.csrf.CsrfViewMiddleware object at 0x7f002ee53208&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.core.handlers.wsgi.WSGIHandler object at 0x7f002ed416a0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback</td>
                    <td class="code"><pre>&lt;function WrappedAPIView at 0x7f0029f34d90&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: PUT &#39;/v2/service_instances/553b98be-caec-4d93-8941-0ce496ab2804?accepts_incomplete=true&#39;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>resolver</td>
                    <td class="code"><pre>&lt;RegexURLResolver &#39;broker.urls&#39; (None:None) ^/&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_kwargs</td>
                    <td class="code"><pre>{&#39;instance_id&#39;: &#39;553b98be-caec-4d93-8941-0ce496ab2804&#39;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>response_is_rendered</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>resolver_match</td>
                    <td class="code"><pre>ResolverMatch(func=rest_framework.decorators.createServiceInstance, args=(), kwargs={&#39;instance_id&#39;: &#39;553b98be-caec-4d93-8941-0ce496ab2804&#39;}, url_name=None, app_names=[], namespaces=[])</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code>/home/vcap/deps/0/python/lib/python3.5/site-packages/django/core/handlers/base.py</code> in <code>get_response</code>

          
            <div class="context" id="c139638680064776">
              
                <ol start="140" class="pre-context" id="pre139638680064776">
                
                  <li onclick="toggle('pre139638680064776', 'post139638680064776')"><pre>                    response = middleware_method(request, callback, callback_args, callback_kwargs)</pre></li>
                
                  <li onclick="toggle('pre139638680064776', 'post139638680064776')"><pre>                    if response:</pre></li>
                
                  <li onclick="toggle('pre139638680064776', 'post139638680064776')"><pre>                        break</pre></li>
                
                  <li onclick="toggle('pre139638680064776', 'post139638680064776')"><pre></pre></li>
                
                  <li onclick="toggle('pre139638680064776', 'post139638680064776')"><pre>            if response is None:</pre></li>
                
                  <li onclick="toggle('pre139638680064776', 'post139638680064776')"><pre>                wrapped_callback = self.make_view_atomic(callback)</pre></li>
                
                  <li onclick="toggle('pre139638680064776', 'post139638680064776')"><pre>                try:</pre></li>
                
                </ol>
              
              <ol start="147" class="context-line">
                <li onclick="toggle('pre139638680064776', 'post139638680064776')"><pre>
                    response = wrapped_callback(request, *callback_args, **callback_kwargs)</pre> <span>...</span></li></ol>
              
                <ol start='148' class="post-context" id="post139638680064776">
                  
                  <li onclick="toggle('pre139638680064776', 'post139638680064776')"><pre>                except Exception as e:</pre></li>
                  
                  <li onclick="toggle('pre139638680064776', 'post139638680064776')"><pre>                    response = self.process_exception_by_middleware(e, request)</pre></li>
                  
                  <li onclick="toggle('pre139638680064776', 'post139638680064776')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139638680064776', 'post139638680064776')"><pre>            # Complain if the view returned None (a common error).</pre></li>
                  
                  <li onclick="toggle('pre139638680064776', 'post139638680064776')"><pre>            if response is None:</pre></li>
                  
                  <li onclick="toggle('pre139638680064776', 'post139638680064776')"><pre>                if isinstance(callback, types.FunctionType):    # FBV</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '139638680064776')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v139638680064776">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>urlconf</td>
                    <td class="code"><pre>&#39;broker.urls&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>wrapped_callback</td>
                    <td class="code"><pre>&lt;function WrappedAPIView at 0x7f0029f34d90&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>middleware_method</td>
                    <td class="code"><pre>&lt;bound method CsrfViewMiddleware.process_view of &lt;django.middleware.csrf.CsrfViewMiddleware object at 0x7f002ee53208&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.core.handlers.wsgi.WSGIHandler object at 0x7f002ed416a0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback</td>
                    <td class="code"><pre>&lt;function WrappedAPIView at 0x7f0029f34d90&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: PUT &#39;/v2/service_instances/553b98be-caec-4d93-8941-0ce496ab2804?accepts_incomplete=true&#39;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>resolver</td>
                    <td class="code"><pre>&lt;RegexURLResolver &#39;broker.urls&#39; (None:None) ^/&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_kwargs</td>
                    <td class="code"><pre>{&#39;instance_id&#39;: &#39;553b98be-caec-4d93-8941-0ce496ab2804&#39;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>response_is_rendered</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>resolver_match</td>
                    <td class="code"><pre>ResolverMatch(func=rest_framework.decorators.createServiceInstance, args=(), kwargs={&#39;instance_id&#39;: &#39;553b98be-caec-4d93-8941-0ce496ab2804&#39;}, url_name=None, app_names=[], namespaces=[])</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code>/home/vcap/deps/0/python/lib/python3.5/site-packages/django/views/decorators/csrf.py</code> in <code>wrapped_view</code>

          
            <div class="context" id="c139638680064072">
              
                <ol start="51" class="pre-context" id="pre139638680064072">
                
                  <li onclick="toggle('pre139638680064072', 'post139638680064072')"><pre>    &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre139638680064072', 'post139638680064072')"><pre>    Marks a view function as being exempt from the CSRF view protection.</pre></li>
                
                  <li onclick="toggle('pre139638680064072', 'post139638680064072')"><pre>    &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre139638680064072', 'post139638680064072')"><pre>    # We could just do view_func.csrf_exempt = True, but decorators</pre></li>
                
                  <li onclick="toggle('pre139638680064072', 'post139638680064072')"><pre>    # are nicer if they don&#39;t have side-effects, so we return a new</pre></li>
                
                  <li onclick="toggle('pre139638680064072', 'post139638680064072')"><pre>    # function.</pre></li>
                
                  <li onclick="toggle('pre139638680064072', 'post139638680064072')"><pre>    def wrapped_view(*args, **kwargs):</pre></li>
                
                </ol>
              
              <ol start="58" class="context-line">
                <li onclick="toggle('pre139638680064072', 'post139638680064072')"><pre>
        return view_func(*args, **kwargs)</pre> <span>...</span></li></ol>
              
                <ol start='59' class="post-context" id="post139638680064072">
                  
                  <li onclick="toggle('pre139638680064072', 'post139638680064072')"><pre>    wrapped_view.csrf_exempt = True</pre></li>
                  
                  <li onclick="toggle('pre139638680064072', 'post139638680064072')"><pre>    return wraps(view_func, assigned=available_attrs(view_func))(wrapped_view)</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '139638680064072')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v139638680064072">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>(&lt;WSGIRequest: PUT &#39;/v2/service_instances/553b98be-caec-4d93-8941-0ce496ab2804?accepts_incomplete=true&#39;&gt;,)</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#39;instance_id&#39;: &#39;553b98be-caec-4d93-8941-0ce496ab2804&#39;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>view_func</td>
                    <td class="code"><pre>&lt;function WrappedAPIView at 0x7f0029f34d08&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code>/home/vcap/deps/0/python/lib/python3.5/site-packages/django/views/generic/base.py</code> in <code>view</code>

          
            <div class="context" id="c139638680064264">
              
                <ol start="61" class="pre-context" id="pre139638680064264">
                
                  <li onclick="toggle('pre139638680064264', 'post139638680064264')"><pre>        def view(request, *args, **kwargs):</pre></li>
                
                  <li onclick="toggle('pre139638680064264', 'post139638680064264')"><pre>            self = cls(**initkwargs)</pre></li>
                
                  <li onclick="toggle('pre139638680064264', 'post139638680064264')"><pre>            if hasattr(self, &#39;get&#39;) and not hasattr(self, &#39;head&#39;):</pre></li>
                
                  <li onclick="toggle('pre139638680064264', 'post139638680064264')"><pre>                self.head = self.get</pre></li>
                
                  <li onclick="toggle('pre139638680064264', 'post139638680064264')"><pre>            self.request = request</pre></li>
                
                  <li onclick="toggle('pre139638680064264', 'post139638680064264')"><pre>            self.args = args</pre></li>
                
                  <li onclick="toggle('pre139638680064264', 'post139638680064264')"><pre>            self.kwargs = kwargs</pre></li>
                
                </ol>
              
              <ol start="68" class="context-line">
                <li onclick="toggle('pre139638680064264', 'post139638680064264')"><pre>
            return self.dispatch(request, *args, **kwargs)</pre> <span>...</span></li></ol>
              
                <ol start='69' class="post-context" id="post139638680064264">
                  
                  <li onclick="toggle('pre139638680064264', 'post139638680064264')"><pre>        view.view_class = cls</pre></li>
                  
                  <li onclick="toggle('pre139638680064264', 'post139638680064264')"><pre>        view.view_initkwargs = initkwargs</pre></li>
                  
                  <li onclick="toggle('pre139638680064264', 'post139638680064264')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139638680064264', 'post139638680064264')"><pre>        # take name and docstring from class</pre></li>
                  
                  <li onclick="toggle('pre139638680064264', 'post139638680064264')"><pre>        update_wrapper(view, cls, updated=())</pre></li>
                  
                  <li onclick="toggle('pre139638680064264', 'post139638680064264')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '139638680064264')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v139638680064264">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>initkwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;WSGIRequest: PUT &#39;/v2/service_instances/553b98be-caec-4d93-8941-0ce496ab2804?accepts_incomplete=true&#39;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;rest_framework.decorators.WrappedAPIView object at 0x7f0029f01fd0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#39;instance_id&#39;: &#39;553b98be-caec-4d93-8941-0ce496ab2804&#39;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>cls</td>
                    <td class="code"><pre>&lt;class &#39;rest_framework.decorators.WrappedAPIView&#39;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/vcap/deps/0/python/lib/python3.5/site-packages/rest_framework/views.py</code> in <code>dispatch</code>

          
            <div class="context" id="c139638680064200">
              
                <ol start="459" class="pre-context" id="pre139638680064200">
                
                  <li onclick="toggle('pre139638680064200', 'post139638680064200')"><pre>                                  self.http_method_not_allowed)</pre></li>
                
                  <li onclick="toggle('pre139638680064200', 'post139638680064200')"><pre>            else:</pre></li>
                
                  <li onclick="toggle('pre139638680064200', 'post139638680064200')"><pre>                handler = self.http_method_not_allowed</pre></li>
                
                  <li onclick="toggle('pre139638680064200', 'post139638680064200')"><pre></pre></li>
                
                  <li onclick="toggle('pre139638680064200', 'post139638680064200')"><pre>            response = handler(request, *args, **kwargs)</pre></li>
                
                  <li onclick="toggle('pre139638680064200', 'post139638680064200')"><pre></pre></li>
                
                  <li onclick="toggle('pre139638680064200', 'post139638680064200')"><pre>        except Exception as exc:</pre></li>
                
                </ol>
              
              <ol start="466" class="context-line">
                <li onclick="toggle('pre139638680064200', 'post139638680064200')"><pre>
            response = self.handle_exception(exc)</pre> <span>...</span></li></ol>
              
                <ol start='467' class="post-context" id="post139638680064200">
                  
                  <li onclick="toggle('pre139638680064200', 'post139638680064200')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139638680064200', 'post139638680064200')"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>
                  
                  <li onclick="toggle('pre139638680064200', 'post139638680064200')"><pre>        return self.response</pre></li>
                  
                  <li onclick="toggle('pre139638680064200', 'post139638680064200')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139638680064200', 'post139638680064200')"><pre>    def options(self, request, *args, **kwargs):</pre></li>
                  
                  <li onclick="toggle('pre139638680064200', 'post139638680064200')"><pre>        &quot;&quot;&quot;</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '139638680064200')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v139638680064200">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request object at 0x7f0029ec30b8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>handler</td>
                    <td class="code"><pre>&lt;bound method api_view.&lt;locals&gt;.decorator.&lt;locals&gt;.handler of &lt;rest_framework.decorators.WrappedAPIView object at 0x7f0029f01fd0&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;rest_framework.decorators.WrappedAPIView object at 0x7f0029f01fd0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#39;instance_id&#39;: &#39;553b98be-caec-4d93-8941-0ce496ab2804&#39;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/vcap/deps/0/python/lib/python3.5/site-packages/rest_framework/views.py</code> in <code>dispatch</code>

          
            <div class="context" id="c139638680064136">
              
                <ol start="456" class="pre-context" id="pre139638680064136">
                
                  <li onclick="toggle('pre139638680064136', 'post139638680064136')"><pre>            # Get the appropriate handler method</pre></li>
                
                  <li onclick="toggle('pre139638680064136', 'post139638680064136')"><pre>            if request.method.lower() in self.http_method_names:</pre></li>
                
                  <li onclick="toggle('pre139638680064136', 'post139638680064136')"><pre>                handler = getattr(self, request.method.lower(),</pre></li>
                
                  <li onclick="toggle('pre139638680064136', 'post139638680064136')"><pre>                                  self.http_method_not_allowed)</pre></li>
                
                  <li onclick="toggle('pre139638680064136', 'post139638680064136')"><pre>            else:</pre></li>
                
                  <li onclick="toggle('pre139638680064136', 'post139638680064136')"><pre>                handler = self.http_method_not_allowed</pre></li>
                
                  <li onclick="toggle('pre139638680064136', 'post139638680064136')"><pre></pre></li>
                
                </ol>
              
              <ol start="463" class="context-line">
                <li onclick="toggle('pre139638680064136', 'post139638680064136')"><pre>
            response = handler(request, *args, **kwargs)</pre> <span>...</span></li></ol>
              
                <ol start='464' class="post-context" id="post139638680064136">
                  
                  <li onclick="toggle('pre139638680064136', 'post139638680064136')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139638680064136', 'post139638680064136')"><pre>        except Exception as exc:</pre></li>
                  
                  <li onclick="toggle('pre139638680064136', 'post139638680064136')"><pre>            response = self.handle_exception(exc)</pre></li>
                  
                  <li onclick="toggle('pre139638680064136', 'post139638680064136')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139638680064136', 'post139638680064136')"><pre>        self.response = self.finalize_response(request, response, *args, **kwargs)</pre></li>
                  
                  <li onclick="toggle('pre139638680064136', 'post139638680064136')"><pre>        return self.response</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '139638680064136')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v139638680064136">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request object at 0x7f0029ec30b8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>handler</td>
                    <td class="code"><pre>&lt;bound method api_view.&lt;locals&gt;.decorator.&lt;locals&gt;.handler of &lt;rest_framework.decorators.WrappedAPIView object at 0x7f0029f01fd0&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;rest_framework.decorators.WrappedAPIView object at 0x7f0029f01fd0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#39;instance_id&#39;: &#39;553b98be-caec-4d93-8941-0ce496ab2804&#39;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/vcap/deps/0/python/lib/python3.5/site-packages/rest_framework/decorators.py</code> in <code>handler</code>

          
            <div class="context" id="c139638680064328">
              
                <ol start="46" class="pre-context" id="pre139638680064328">
                
                  <li onclick="toggle('pre139638680064328', 'post139638680064328')"><pre>        assert isinstance(http_method_names, (list, tuple)), \</pre></li>
                
                  <li onclick="toggle('pre139638680064328', 'post139638680064328')"><pre>            &#39;@api_view expected a list of strings, received %!!(MISSING)s(MISSING)&#39; %!!(MISSING)t(MISSING)ype(http_method_names).__name__</pre></li>
                
                  <li onclick="toggle('pre139638680064328', 'post139638680064328')"><pre></pre></li>
                
                  <li onclick="toggle('pre139638680064328', 'post139638680064328')"><pre>        allowed_methods = set(http_method_names) | set((&#39;options&#39;,))</pre></li>
                
                  <li onclick="toggle('pre139638680064328', 'post139638680064328')"><pre>        WrappedAPIView.http_method_names = [method.lower() for method in allowed_methods]</pre></li>
                
                  <li onclick="toggle('pre139638680064328', 'post139638680064328')"><pre></pre></li>
                
                  <li onclick="toggle('pre139638680064328', 'post139638680064328')"><pre>        def handler(self, *args, **kwargs):</pre></li>
                
                </ol>
              
              <ol start="53" class="context-line">
                <li onclick="toggle('pre139638680064328', 'post139638680064328')"><pre>
            return func(*args, **kwargs)</pre> <span>...</span></li></ol>
              
                <ol start='54' class="post-context" id="post139638680064328">
                  
                  <li onclick="toggle('pre139638680064328', 'post139638680064328')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139638680064328', 'post139638680064328')"><pre>        for method in http_method_names:</pre></li>
                  
                  <li onclick="toggle('pre139638680064328', 'post139638680064328')"><pre>            setattr(WrappedAPIView, method.lower(), handler)</pre></li>
                  
                  <li onclick="toggle('pre139638680064328', 'post139638680064328')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139638680064328', 'post139638680064328')"><pre>        WrappedAPIView.__name__ = func.__name__</pre></li>
                  
                  <li onclick="toggle('pre139638680064328', 'post139638680064328')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '139638680064328')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v139638680064328">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;rest_framework.decorators.WrappedAPIView object at 0x7f0029f01fd0&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{&#39;instance_id&#39;: &#39;553b98be-caec-4d93-8941-0ce496ab2804&#39;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>func</td>
                    <td class="code"><pre>&lt;function createServiceInstance at 0x7f0029f34bf8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>(&lt;rest_framework.request.Request object at 0x7f0029ec30b8&gt;,)</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/vcap/app/brokerApp/views.py</code> in <code>createServiceInstance</code>

          
            <div class="context" id="c139638680137096">
              
                <ol start="45" class="pre-context" id="pre139638680137096">
                
                  <li onclick="toggle('pre139638680137096', 'post139638680137096')"><pre>	data = {</pre></li>
                
                  <li onclick="toggle('pre139638680137096', 'post139638680137096')"><pre>		&#39;service_id&#39;: request.data.get(&#39;service_id&#39;),</pre></li>
                
                  <li onclick="toggle('pre139638680137096', 'post139638680137096')"><pre>		&#39;plan_id&#39;: request.data.get(&#39;plan_id&#39;),</pre></li>
                
                  <li onclick="toggle('pre139638680137096', 'post139638680137096')"><pre>		&#39;organization_guid&#39;: request.data.get(&#39;organization_guid&#39;),</pre></li>
                
                  <li onclick="toggle('pre139638680137096', 'post139638680137096')"><pre>		&#39;space_guid&#39;: request.data.get(&#39;space_guid&#39;)</pre></li>
                
                  <li onclick="toggle('pre139638680137096', 'post139638680137096')"><pre>	}</pre></li>
                
                  <li onclick="toggle('pre139638680137096', 'post139638680137096')"><pre>	serializer = ServiceSerializer(data=data)</pre></li>
                
                </ol>
              
              <ol start="52" class="context-line">
                <li onclick="toggle('pre139638680137096', 'post139638680137096')"><pre>
	if serializer.is_valid():</pre> <span>...</span></li></ol>
              
                <ol start='53' class="post-context" id="post139638680137096">
                  
                  <li onclick="toggle('pre139638680137096', 'post139638680137096')"><pre>		serializer.save()</pre></li>
                  
                  <li onclick="toggle('pre139638680137096', 'post139638680137096')"><pre>		return_data = {&#39;dashboard_uri&#39;: &#39;http://localhost:8000/dbService/instance_id&#39;}</pre></li>
                  
                  <li onclick="toggle('pre139638680137096', 'post139638680137096')"><pre>		logger.info(&quot;Service instance got created successfully with id = &quot; + instance_id)</pre></li>
                  
                  <li onclick="toggle('pre139638680137096', 'post139638680137096')"><pre>		return Response(return_data, status=status.HTTP_201_CREATED)</pre></li>
                  
                  <li onclick="toggle('pre139638680137096', 'post139638680137096')"><pre>	else:</pre></li>
                  
                  <li onclick="toggle('pre139638680137096', 'post139638680137096')"><pre>		logger.error(&quot;Error occurred while creating service.&quot;)</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '139638680137096')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v139638680137096">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>instance_id</td>
                    <td class="code"><pre>&#39;553b98be-caec-4d93-8941-0ce496ab2804&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>serializer</td>
                    <td class="code"><pre>ServiceSerializer(data={&#39;service_id&#39;: &#39;f10bcd9f-21d0-4ad9-bd32-f4d5516ewe65ec&#39;, &#39;organization_guid&#39;: &#39;18c3b7d3-4446-46d6-a8c9-aac47d5a3133&#39;, &#39;plan_id&#39;: &#39;a9d88190-d97c-43dsds-ac8f-3ff9dfa86e8c&#39;, &#39;space_guid&#39;: &#39;e20072cd-fa1d-4075-8316-030246cbe7f4&#39;}):</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&lt;rest_framework.request.Request object at 0x7f0029ec30b8&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>data</td>
                    <td class="code"><pre>{&#39;organization_guid&#39;: &#39;18c3b7d3-4446-46d6-a8c9-aac47d5a3133&#39;,
 &#39;plan_id&#39;: &#39;a9d88190-d97c-43dsds-ac8f-3ff9dfa86e8c&#39;,
 &#39;service_id&#39;: &#39;f10bcd9f-21d0-4ad9-bd32-f4d5516ewe65ec&#39;,
 &#39;space_guid&#39;: &#39;e20072cd-fa1d-4075-8316-030246cbe7f4&#39;}</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/vcap/deps/0/python/lib/python3.5/site-packages/rest_framework/serializers.py</code> in <code>is_valid</code>

          
            <div class="context" id="c139638680136968">
              
                <ol start="206" class="pre-context" id="pre139638680136968">
                
                  <li onclick="toggle('pre139638680136968', 'post139638680136968')"><pre>        assert hasattr(self, &#39;initial_data&#39;), (</pre></li>
                
                  <li onclick="toggle('pre139638680136968', 'post139638680136968')"><pre>            &#39;Cannot call `.is_valid()` as no `data=` keyword argument was &#39;</pre></li>
                
                  <li onclick="toggle('pre139638680136968', 'post139638680136968')"><pre>            &#39;passed when instantiating the serializer instance.&#39;</pre></li>
                
                  <li onclick="toggle('pre139638680136968', 'post139638680136968')"><pre>        )</pre></li>
                
                  <li onclick="toggle('pre139638680136968', 'post139638680136968')"><pre></pre></li>
                
                  <li onclick="toggle('pre139638680136968', 'post139638680136968')"><pre>        if not hasattr(self, &#39;_validated_data&#39;):</pre></li>
                
                  <li onclick="toggle('pre139638680136968', 'post139638680136968')"><pre>            try:</pre></li>
                
                </ol>
              
              <ol start="213" class="context-line">
                <li onclick="toggle('pre139638680136968', 'post139638680136968')"><pre>
                self._validated_data = self.run_validation(self.initial_data)</pre> <span>...</span></li></ol>
              
                <ol start='214' class="post-context" id="post139638680136968">
                  
                  <li onclick="toggle('pre139638680136968', 'post139638680136968')"><pre>            except ValidationError as exc:</pre></li>
                  
                  <li onclick="toggle('pre139638680136968', 'post139638680136968')"><pre>                self._validated_data = {}</pre></li>
                  
                  <li onclick="toggle('pre139638680136968', 'post139638680136968')"><pre>                self._errors = exc.detail</pre></li>
                  
                  <li onclick="toggle('pre139638680136968', 'post139638680136968')"><pre>            else:</pre></li>
                  
                  <li onclick="toggle('pre139638680136968', 'post139638680136968')"><pre>                self._errors = {}</pre></li>
                  
                  <li onclick="toggle('pre139638680136968', 'post139638680136968')"><pre></pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '139638680136968')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v139638680136968">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>ServiceSerializer(data={&#39;service_id&#39;: &#39;f10bcd9f-21d0-4ad9-bd32-f4d5516ewe65ec&#39;, &#39;organization_guid&#39;: &#39;18c3b7d3-4446-46d6-a8c9-aac47d5a3133&#39;, &#39;plan_id&#39;: &#39;a9d88190-d97c-43dsds-ac8f-3ff9dfa86e8c&#39;, &#39;space_guid&#39;: &#39;e20072cd-fa1d-4075-8316-030246cbe7f4&#39;}):</pre></td>
                  </tr>
                
                  <tr>
                    <td>raise_exception</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/vcap/deps/0/python/lib/python3.5/site-packages/rest_framework/serializers.py</code> in <code>run_validation</code>

          
            <div class="context" id="c139638680136456">
              
                <ol start="400" class="pre-context" id="pre139638680136456">
                
                  <li onclick="toggle('pre139638680136456', 'post139638680136456')"><pre>        performed by validators and the `.validate()` method should</pre></li>
                
                  <li onclick="toggle('pre139638680136456', 'post139638680136456')"><pre>        be coerced into an error dictionary with a &#39;non_fields_error&#39; key.</pre></li>
                
                  <li onclick="toggle('pre139638680136456', 'post139638680136456')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre139638680136456', 'post139638680136456')"><pre>        (is_empty_value, data) = self.validate_empty_values(data)</pre></li>
                
                  <li onclick="toggle('pre139638680136456', 'post139638680136456')"><pre>        if is_empty_value:</pre></li>
                
                  <li onclick="toggle('pre139638680136456', 'post139638680136456')"><pre>            return data</pre></li>
                
                  <li onclick="toggle('pre139638680136456', 'post139638680136456')"><pre></pre></li>
                
                </ol>
              
              <ol start="407" class="context-line">
                <li onclick="toggle('pre139638680136456', 'post139638680136456')"><pre>
        value = self.to_internal_value(data)</pre> <span>...</span></li></ol>
              
                <ol start='408' class="post-context" id="post139638680136456">
                  
                  <li onclick="toggle('pre139638680136456', 'post139638680136456')"><pre>        try:</pre></li>
                  
                  <li onclick="toggle('pre139638680136456', 'post139638680136456')"><pre>            self.run_validators(value)</pre></li>
                  
                  <li onclick="toggle('pre139638680136456', 'post139638680136456')"><pre>            value = self.validate(value)</pre></li>
                  
                  <li onclick="toggle('pre139638680136456', 'post139638680136456')"><pre>            assert value is not None, &#39;.validate() should return the validated data&#39;</pre></li>
                  
                  <li onclick="toggle('pre139638680136456', 'post139638680136456')"><pre>        except (ValidationError, DjangoValidationError) as exc:</pre></li>
                  
                  <li onclick="toggle('pre139638680136456', 'post139638680136456')"><pre>            raise ValidationError(detail=get_validation_error_detail(exc))</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '139638680136456')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v139638680136456">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>is_empty_value</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>ServiceSerializer(data={&#39;service_id&#39;: &#39;f10bcd9f-21d0-4ad9-bd32-f4d5516ewe65ec&#39;, &#39;organization_guid&#39;: &#39;18c3b7d3-4446-46d6-a8c9-aac47d5a3133&#39;, &#39;plan_id&#39;: &#39;a9d88190-d97c-43dsds-ac8f-3ff9dfa86e8c&#39;, &#39;space_guid&#39;: &#39;e20072cd-fa1d-4075-8316-030246cbe7f4&#39;}):</pre></td>
                  </tr>
                
                  <tr>
                    <td>data</td>
                    <td class="code"><pre>{&#39;organization_guid&#39;: &#39;18c3b7d3-4446-46d6-a8c9-aac47d5a3133&#39;,
 &#39;plan_id&#39;: &#39;a9d88190-d97c-43dsds-ac8f-3ff9dfa86e8c&#39;,
 &#39;service_id&#39;: &#39;f10bcd9f-21d0-4ad9-bd32-f4d5516ewe65ec&#39;,
 &#39;space_guid&#39;: &#39;e20072cd-fa1d-4075-8316-030246cbe7f4&#39;}</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/vcap/deps/0/python/lib/python3.5/site-packages/rest_framework/serializers.py</code> in <code>to_internal_value</code>

          
            <div class="context" id="c139638680136520">
              
                <ol start="424" class="pre-context" id="pre139638680136520">
                
                  <li onclick="toggle('pre139638680136520', 'post139638680136520')"><pre>            )</pre></li>
                
                  <li onclick="toggle('pre139638680136520', 'post139638680136520')"><pre>            raise ValidationError({</pre></li>
                
                  <li onclick="toggle('pre139638680136520', 'post139638680136520')"><pre>                api_settings.NON_FIELD_ERRORS_KEY: [message]</pre></li>
                
                  <li onclick="toggle('pre139638680136520', 'post139638680136520')"><pre>            })</pre></li>
                
                  <li onclick="toggle('pre139638680136520', 'post139638680136520')"><pre></pre></li>
                
                  <li onclick="toggle('pre139638680136520', 'post139638680136520')"><pre>        ret = OrderedDict()</pre></li>
                
                  <li onclick="toggle('pre139638680136520', 'post139638680136520')"><pre>        errors = OrderedDict()</pre></li>
                
                </ol>
              
              <ol start="431" class="context-line">
                <li onclick="toggle('pre139638680136520', 'post139638680136520')"><pre>
        fields = self._writable_fields</pre> <span>...</span></li></ol>
              
                <ol start='432' class="post-context" id="post139638680136520">
                  
                  <li onclick="toggle('pre139638680136520', 'post139638680136520')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139638680136520', 'post139638680136520')"><pre>        for field in fields:</pre></li>
                  
                  <li onclick="toggle('pre139638680136520', 'post139638680136520')"><pre>            validate_method = getattr(self, &#39;validate_&#39; + field.field_name, None)</pre></li>
                  
                  <li onclick="toggle('pre139638680136520', 'post139638680136520')"><pre>            primitive_value = field.get_value(data)</pre></li>
                  
                  <li onclick="toggle('pre139638680136520', 'post139638680136520')"><pre>            try:</pre></li>
                  
                  <li onclick="toggle('pre139638680136520', 'post139638680136520')"><pre>                validated_value = field.run_validation(primitive_value)</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '139638680136520')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v139638680136520">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>ServiceSerializer(data={&#39;service_id&#39;: &#39;f10bcd9f-21d0-4ad9-bd32-f4d5516ewe65ec&#39;, &#39;organization_guid&#39;: &#39;18c3b7d3-4446-46d6-a8c9-aac47d5a3133&#39;, &#39;plan_id&#39;: &#39;a9d88190-d97c-43dsds-ac8f-3ff9dfa86e8c&#39;, &#39;space_guid&#39;: &#39;e20072cd-fa1d-4075-8316-030246cbe7f4&#39;}):</pre></td>
                  </tr>
                
                  <tr>
                    <td>ret</td>
                    <td class="code"><pre>OrderedDict()</pre></td>
                  </tr>
                
                  <tr>
                    <td>data</td>
                    <td class="code"><pre>{&#39;organization_guid&#39;: &#39;18c3b7d3-4446-46d6-a8c9-aac47d5a3133&#39;,
 &#39;plan_id&#39;: &#39;a9d88190-d97c-43dsds-ac8f-3ff9dfa86e8c&#39;,
 &#39;service_id&#39;: &#39;f10bcd9f-21d0-4ad9-bd32-f4d5516ewe65ec&#39;,
 &#39;space_guid&#39;: &#39;e20072cd-fa1d-4075-8316-030246cbe7f4&#39;}</pre></td>
                  </tr>
                
                  <tr>
                    <td>errors</td>
                    <td class="code"><pre>OrderedDict()</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame django">
          <code>/home/vcap/deps/0/python/lib/python3.5/site-packages/django/utils/functional.py</code> in <code>__get__</code>

          
            <div class="context" id="c139638680136584">
              
                <ol start="26" class="pre-context" id="pre139638680136584">
                
                  <li onclick="toggle('pre139638680136584', 'post139638680136584')"><pre>        self.func = func</pre></li>
                
                  <li onclick="toggle('pre139638680136584', 'post139638680136584')"><pre>        self.__doc__ = getattr(func, &#39;__doc__&#39;)</pre></li>
                
                  <li onclick="toggle('pre139638680136584', 'post139638680136584')"><pre>        self.name = name or func.__name__</pre></li>
                
                  <li onclick="toggle('pre139638680136584', 'post139638680136584')"><pre></pre></li>
                
                  <li onclick="toggle('pre139638680136584', 'post139638680136584')"><pre>    def __get__(self, instance, type=None):</pre></li>
                
                  <li onclick="toggle('pre139638680136584', 'post139638680136584')"><pre>        if instance is None:</pre></li>
                
                  <li onclick="toggle('pre139638680136584', 'post139638680136584')"><pre>            return self</pre></li>
                
                </ol>
              
              <ol start="33" class="context-line">
                <li onclick="toggle('pre139638680136584', 'post139638680136584')"><pre>
        res = instance.__dict__[self.name] = self.func(instance)</pre> <span>...</span></li></ol>
              
                <ol start='34' class="post-context" id="post139638680136584">
                  
                  <li onclick="toggle('pre139638680136584', 'post139638680136584')"><pre>        return res</pre></li>
                  
                  <li onclick="toggle('pre139638680136584', 'post139638680136584')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139638680136584', 'post139638680136584')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139638680136584', 'post139638680136584')"><pre>class Promise(object):</pre></li>
                  
                  <li onclick="toggle('pre139638680136584', 'post139638680136584')"><pre>    &quot;&quot;&quot;</pre></li>
                  
                  <li onclick="toggle('pre139638680136584', 'post139638680136584')"><pre>    This is just a base class for the proxy class created in</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '139638680136584')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v139638680136584">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>type</td>
                    <td class="code"><pre>&lt;class &#39;brokerApp.serializers.ServiceSerializer&#39;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>instance</td>
                    <td class="code"><pre>ServiceSerializer(data={&#39;service_id&#39;: &#39;f10bcd9f-21d0-4ad9-bd32-f4d5516ewe65ec&#39;, &#39;organization_guid&#39;: &#39;18c3b7d3-4446-46d6-a8c9-aac47d5a3133&#39;, &#39;plan_id&#39;: &#39;a9d88190-d97c-43dsds-ac8f-3ff9dfa86e8c&#39;, &#39;space_guid&#39;: &#39;e20072cd-fa1d-4075-8316-030246cbe7f4&#39;}):</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.utils.functional.cached_property object at 0x7f0029f7a7f0&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/vcap/deps/0/python/lib/python3.5/site-packages/rest_framework/serializers.py</code> in <code>_writable_fields</code>

          
            <div class="context" id="c139638680136712">
              
                <ol start="339" class="pre-context" id="pre139638680136712">
                
                  <li onclick="toggle('pre139638680136712', 'post139638680136712')"><pre>            for key, value in self.get_fields().items():</pre></li>
                
                  <li onclick="toggle('pre139638680136712', 'post139638680136712')"><pre>                self._fields[key] = value</pre></li>
                
                  <li onclick="toggle('pre139638680136712', 'post139638680136712')"><pre>        return self._fields</pre></li>
                
                  <li onclick="toggle('pre139638680136712', 'post139638680136712')"><pre></pre></li>
                
                  <li onclick="toggle('pre139638680136712', 'post139638680136712')"><pre>    @cached_property</pre></li>
                
                  <li onclick="toggle('pre139638680136712', 'post139638680136712')"><pre>    def _writable_fields(self):</pre></li>
                
                  <li onclick="toggle('pre139638680136712', 'post139638680136712')"><pre>        return [</pre></li>
                
                </ol>
              
              <ol start="346" class="context-line">
                <li onclick="toggle('pre139638680136712', 'post139638680136712')"><pre>
            field for field in self.fields.values()</pre> <span>...</span></li></ol>
              
                <ol start='347' class="post-context" id="post139638680136712">
                  
                  <li onclick="toggle('pre139638680136712', 'post139638680136712')"><pre>            if (not field.read_only) or (field.default is not empty)</pre></li>
                  
                  <li onclick="toggle('pre139638680136712', 'post139638680136712')"><pre>        ]</pre></li>
                  
                  <li onclick="toggle('pre139638680136712', 'post139638680136712')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139638680136712', 'post139638680136712')"><pre>    @cached_property</pre></li>
                  
                  <li onclick="toggle('pre139638680136712', 'post139638680136712')"><pre>    def _readable_fields(self):</pre></li>
                  
                  <li onclick="toggle('pre139638680136712', 'post139638680136712')"><pre>        return [</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '139638680136712')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v139638680136712">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>ServiceSerializer(data={&#39;service_id&#39;: &#39;f10bcd9f-21d0-4ad9-bd32-f4d5516ewe65ec&#39;, &#39;organization_guid&#39;: &#39;18c3b7d3-4446-46d6-a8c9-aac47d5a3133&#39;, &#39;plan_id&#39;: &#39;a9d88190-d97c-43dsds-ac8f-3ff9dfa86e8c&#39;, &#39;space_guid&#39;: &#39;e20072cd-fa1d-4075-8316-030246cbe7f4&#39;}):</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/vcap/deps/0/python/lib/python3.5/site-packages/rest_framework/serializers.py</code> in <code>fields</code>

          
            <div class="context" id="c139638680136840">
              
                <ol start="332" class="pre-context" id="pre139638680136840">
                
                  <li onclick="toggle('pre139638680136840', 'post139638680136840')"><pre>        A dictionary of {field_name: field_instance}.</pre></li>
                
                  <li onclick="toggle('pre139638680136840', 'post139638680136840')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre139638680136840', 'post139638680136840')"><pre>        # `fields` is evaluated lazily. We do this to ensure that we don&#39;t</pre></li>
                
                  <li onclick="toggle('pre139638680136840', 'post139638680136840')"><pre>        # have issues importing modules that use ModelSerializers as fields,</pre></li>
                
                  <li onclick="toggle('pre139638680136840', 'post139638680136840')"><pre>        # even if Django&#39;s app-loading stage has not yet run.</pre></li>
                
                  <li onclick="toggle('pre139638680136840', 'post139638680136840')"><pre>        if not hasattr(self, &#39;_fields&#39;):</pre></li>
                
                  <li onclick="toggle('pre139638680136840', 'post139638680136840')"><pre>            self._fields = BindingDict(self)</pre></li>
                
                </ol>
              
              <ol start="339" class="context-line">
                <li onclick="toggle('pre139638680136840', 'post139638680136840')"><pre>
            for key, value in self.get_fields().items():</pre> <span>...</span></li></ol>
              
                <ol start='340' class="post-context" id="post139638680136840">
                  
                  <li onclick="toggle('pre139638680136840', 'post139638680136840')"><pre>                self._fields[key] = value</pre></li>
                  
                  <li onclick="toggle('pre139638680136840', 'post139638680136840')"><pre>        return self._fields</pre></li>
                  
                  <li onclick="toggle('pre139638680136840', 'post139638680136840')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139638680136840', 'post139638680136840')"><pre>    @cached_property</pre></li>
                  
                  <li onclick="toggle('pre139638680136840', 'post139638680136840')"><pre>    def _writable_fields(self):</pre></li>
                  
                  <li onclick="toggle('pre139638680136840', 'post139638680136840')"><pre>        return [</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '139638680136840')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v139638680136840">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>ServiceSerializer(data={&#39;service_id&#39;: &#39;f10bcd9f-21d0-4ad9-bd32-f4d5516ewe65ec&#39;, &#39;organization_guid&#39;: &#39;18c3b7d3-4446-46d6-a8c9-aac47d5a3133&#39;, &#39;plan_id&#39;: &#39;a9d88190-d97c-43dsds-ac8f-3ff9dfa86e8c&#39;, &#39;space_guid&#39;: &#39;e20072cd-fa1d-4075-8316-030246cbe7f4&#39;}):</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/vcap/deps/0/python/lib/python3.5/site-packages/rest_framework/serializers.py</code> in <code>get_fields</code>

          
            <div class="context" id="c139638680137032">
              
                <ol start="932" class="pre-context" id="pre139638680137032">
                
                  <li onclick="toggle('pre139638680137032', 'post139638680137032')"><pre>            # If the field is explicitly declared on the class then use that.</pre></li>
                
                  <li onclick="toggle('pre139638680137032', 'post139638680137032')"><pre>            if field_name in declared_fields:</pre></li>
                
                  <li onclick="toggle('pre139638680137032', 'post139638680137032')"><pre>                fields[field_name] = declared_fields[field_name]</pre></li>
                
                  <li onclick="toggle('pre139638680137032', 'post139638680137032')"><pre>                continue</pre></li>
                
                  <li onclick="toggle('pre139638680137032', 'post139638680137032')"><pre></pre></li>
                
                  <li onclick="toggle('pre139638680137032', 'post139638680137032')"><pre>            # Determine the serializer field class and keyword arguments.</pre></li>
                
                  <li onclick="toggle('pre139638680137032', 'post139638680137032')"><pre>            field_class, field_kwargs = self.build_field(</pre></li>
                
                </ol>
              
              <ol start="939" class="context-line">
                <li onclick="toggle('pre139638680137032', 'post139638680137032')"><pre>
                field_name, info, model, depth</pre> <span>...</span></li></ol>
              
                <ol start='940' class="post-context" id="post139638680137032">
                  
                  <li onclick="toggle('pre139638680137032', 'post139638680137032')"><pre>            )</pre></li>
                  
                  <li onclick="toggle('pre139638680137032', 'post139638680137032')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139638680137032', 'post139638680137032')"><pre>            # Include any kwargs defined in `Meta.extra_kwargs`</pre></li>
                  
                  <li onclick="toggle('pre139638680137032', 'post139638680137032')"><pre>            extra_field_kwargs = extra_kwargs.get(field_name, {})</pre></li>
                  
                  <li onclick="toggle('pre139638680137032', 'post139638680137032')"><pre>            field_kwargs = self.include_extra_kwargs(</pre></li>
                  
                  <li onclick="toggle('pre139638680137032', 'post139638680137032')"><pre>                field_kwargs, extra_field_kwargs</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '139638680137032')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v139638680137032">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>declared_fields</td>
                    <td class="code"><pre>OrderedDict()</pre></td>
                  </tr>
                
                  <tr>
                    <td>extra_kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>ServiceSerializer(data={&#39;service_id&#39;: &#39;f10bcd9f-21d0-4ad9-bd32-f4d5516ewe65ec&#39;, &#39;organization_guid&#39;: &#39;18c3b7d3-4446-46d6-a8c9-aac47d5a3133&#39;, &#39;plan_id&#39;: &#39;a9d88190-d97c-43dsds-ac8f-3ff9dfa86e8c&#39;, &#39;space_guid&#39;: &#39;e20072cd-fa1d-4075-8316-030246cbe7f4&#39;}):</pre></td>
                  </tr>
                
                  <tr>
                    <td>info</td>
                    <td class="code"><pre>FieldResult(pk=&lt;django.db.models.fields.AutoField: id&gt;, fields=OrderedDict([(&#39;service_id&#39;, &lt;django.db.models.fields.CharField: service_id&gt;), (&#39;plan_id&#39;, &lt;django.db.models.fields.CharField: plan_id&gt;), (&#39;organization_guid&#39;, &lt;django.db.models.fields.CharField: organization_guid&gt;), (&#39;space_guid&#39;, &lt;django.db.models.fields.CharField: space_guid&gt;)]), forward_relations=OrderedDict(), reverse_relations=OrderedDict(), fields_and_pk=OrderedDict([(&#39;pk&#39;, &lt;django.db.models.fields.AutoField: id&gt;), (&#39;id&#39;, &lt;django.db.models.fields.AutoField: id&gt;), (&#39;service_id&#39;, &lt;django.db.models.fields.CharField: service_id&gt;), (&#39;plan_id&#39;, &lt;django.db.models.fields.CharField: plan_id&gt;), (&#39;organization_guid&#39;, &lt;django.db.models.fields.CharField: organization_guid&gt;), (&#39;space_guid&#39;, &lt;django.db.models.fields.CharField: space_guid&gt;)]), relations=OrderedDict())</pre></td>
                  </tr>
                
                  <tr>
                    <td>field_name</td>
                    <td class="code"><pre>&#39;service_instance_id&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>hidden_fields</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>model</td>
                    <td class="code"><pre>&lt;class &#39;brokerApp.models.ServiceRecord&#39;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>fields</td>
                    <td class="code"><pre>OrderedDict()</pre></td>
                  </tr>
                
                  <tr>
                    <td>depth</td>
                    <td class="code"><pre>0</pre></td>
                  </tr>
                
                  <tr>
                    <td>field_names</td>
                    <td class="code"><pre>(&#39;service_instance_id&#39;,
 &#39;service_id&#39;,
 &#39;plan_id&#39;,
 &#39;organization_guid&#39;,
 &#39;space_guid&#39;)</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/vcap/deps/0/python/lib/python3.5/site-packages/rest_framework/serializers.py</code> in <code>build_field</code>

          
            <div class="context" id="c139638680136392">
              
                <ol start="1069" class="pre-context" id="pre139638680136392">
                
                  <li onclick="toggle('pre139638680136392', 'post139638680136392')"><pre></pre></li>
                
                  <li onclick="toggle('pre139638680136392', 'post139638680136392')"><pre>        elif hasattr(model_class, field_name):</pre></li>
                
                  <li onclick="toggle('pre139638680136392', 'post139638680136392')"><pre>            return self.build_property_field(field_name, model_class)</pre></li>
                
                  <li onclick="toggle('pre139638680136392', 'post139638680136392')"><pre></pre></li>
                
                  <li onclick="toggle('pre139638680136392', 'post139638680136392')"><pre>        elif field_name == self.url_field_name:</pre></li>
                
                  <li onclick="toggle('pre139638680136392', 'post139638680136392')"><pre>            return self.build_url_field(field_name, model_class)</pre></li>
                
                  <li onclick="toggle('pre139638680136392', 'post139638680136392')"><pre></pre></li>
                
                </ol>
              
              <ol start="1076" class="context-line">
                <li onclick="toggle('pre139638680136392', 'post139638680136392')"><pre>
        return self.build_unknown_field(field_name, model_class)</pre> <span>...</span></li></ol>
              
                <ol start='1077' class="post-context" id="post139638680136392">
                  
                  <li onclick="toggle('pre139638680136392', 'post139638680136392')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139638680136392', 'post139638680136392')"><pre>    def build_standard_field(self, field_name, model_field):</pre></li>
                  
                  <li onclick="toggle('pre139638680136392', 'post139638680136392')"><pre>        &quot;&quot;&quot;</pre></li>
                  
                  <li onclick="toggle('pre139638680136392', 'post139638680136392')"><pre>        Create regular model fields.</pre></li>
                  
                  <li onclick="toggle('pre139638680136392', 'post139638680136392')"><pre>        &quot;&quot;&quot;</pre></li>
                  
                  <li onclick="toggle('pre139638680136392', 'post139638680136392')"><pre>        field_mapping = ClassLookupDict(self.serializer_field_mapping)</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '139638680136392')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v139638680136392">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>info</td>
                    <td class="code"><pre>FieldResult(pk=&lt;django.db.models.fields.AutoField: id&gt;, fields=OrderedDict([(&#39;service_id&#39;, &lt;django.db.models.fields.CharField: service_id&gt;), (&#39;plan_id&#39;, &lt;django.db.models.fields.CharField: plan_id&gt;), (&#39;organization_guid&#39;, &lt;django.db.models.fields.CharField: organization_guid&gt;), (&#39;space_guid&#39;, &lt;django.db.models.fields.CharField: space_guid&gt;)]), forward_relations=OrderedDict(), reverse_relations=OrderedDict(), fields_and_pk=OrderedDict([(&#39;pk&#39;, &lt;django.db.models.fields.AutoField: id&gt;), (&#39;id&#39;, &lt;django.db.models.fields.AutoField: id&gt;), (&#39;service_id&#39;, &lt;django.db.models.fields.CharField: service_id&gt;), (&#39;plan_id&#39;, &lt;django.db.models.fields.CharField: plan_id&gt;), (&#39;organization_guid&#39;, &lt;django.db.models.fields.CharField: organization_guid&gt;), (&#39;space_guid&#39;, &lt;django.db.models.fields.CharField: space_guid&gt;)]), relations=OrderedDict())</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>ServiceSerializer(data={&#39;service_id&#39;: &#39;f10bcd9f-21d0-4ad9-bd32-f4d5516ewe65ec&#39;, &#39;organization_guid&#39;: &#39;18c3b7d3-4446-46d6-a8c9-aac47d5a3133&#39;, &#39;plan_id&#39;: &#39;a9d88190-d97c-43dsds-ac8f-3ff9dfa86e8c&#39;, &#39;space_guid&#39;: &#39;e20072cd-fa1d-4075-8316-030246cbe7f4&#39;}):</pre></td>
                  </tr>
                
                  <tr>
                    <td>nested_depth</td>
                    <td class="code"><pre>0</pre></td>
                  </tr>
                
                  <tr>
                    <td>model_class</td>
                    <td class="code"><pre>&lt;class &#39;brokerApp.models.ServiceRecord&#39;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>field_name</td>
                    <td class="code"><pre>&#39;service_instance_id&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        
        <li class="frame user">
          <code>/home/vcap/deps/0/python/lib/python3.5/site-packages/rest_framework/serializers.py</code> in <code>build_unknown_field</code>

          
            <div class="context" id="c139638680136904">
              
                <ol start="1175" class="pre-context" id="pre139638680136904">
                
                  <li onclick="toggle('pre139638680136904', 'post139638680136904')"><pre></pre></li>
                
                  <li onclick="toggle('pre139638680136904', 'post139638680136904')"><pre>    def build_unknown_field(self, field_name, model_class):</pre></li>
                
                  <li onclick="toggle('pre139638680136904', 'post139638680136904')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre139638680136904', 'post139638680136904')"><pre>        Raise an error on any unknown fields.</pre></li>
                
                  <li onclick="toggle('pre139638680136904', 'post139638680136904')"><pre>        &quot;&quot;&quot;</pre></li>
                
                  <li onclick="toggle('pre139638680136904', 'post139638680136904')"><pre>        raise ImproperlyConfigured(</pre></li>
                
                  <li onclick="toggle('pre139638680136904', 'post139638680136904')"><pre>            &#39;Field name `%!!(MISSING)s(MISSING)` is not valid for model `%!!(MISSING)s(MISSING)`.&#39; %!!(MISSING)<(MISSING)/pre></li>
                
                </ol>
              
              <ol start="1182" class="context-line">
                <li onclick="toggle('pre139638680136904', 'post139638680136904')"><pre>
            (field_name, model_class.__name__)</pre> <span>...</span></li></ol>
              
                <ol start='1183' class="post-context" id="post139638680136904">
                  
                  <li onclick="toggle('pre139638680136904', 'post139638680136904')"><pre>        )</pre></li>
                  
                  <li onclick="toggle('pre139638680136904', 'post139638680136904')"><pre></pre></li>
                  
                  <li onclick="toggle('pre139638680136904', 'post139638680136904')"><pre>    def include_extra_kwargs(self, kwargs, extra_kwargs):</pre></li>
                  
                  <li onclick="toggle('pre139638680136904', 'post139638680136904')"><pre>        &quot;&quot;&quot;</pre></li>
                  
                  <li onclick="toggle('pre139638680136904', 'post139638680136904')"><pre>        Include any &#39;extra_kwargs&#39; that have been included for this field,</pre></li>
                  
                  <li onclick="toggle('pre139638680136904', 'post139638680136904')"><pre>        possibly removing any incompatible existing keyword arguments.</pre></li>
                  
              </ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '139638680136904')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v139638680136904">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>ServiceSerializer(data={&#39;service_id&#39;: &#39;f10bcd9f-21d0-4ad9-bd32-f4d5516ewe65ec&#39;, &#39;organization_guid&#39;: &#39;18c3b7d3-4446-46d6-a8c9-aac47d5a3133&#39;, &#39;plan_id&#39;: &#39;a9d88190-d97c-43dsds-ac8f-3ff9dfa86e8c&#39;, &#39;space_guid&#39;: &#39;e20072cd-fa1d-4075-8316-030246cbe7f4&#39;}):</pre></td>
                  </tr>
                
                  <tr>
                    <td>model_class</td>
                    <td class="code"><pre>&lt;class &#39;brokerApp.models.ServiceRecord&#39;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>field_name</td>
                    <td class="code"><pre>&#39;service_instance_id&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
    </ul>
  </div>
  
  <form action="http://dpaste.com/" name="pasteform" id="pasteform" method="post">

  <div id="pastebinTraceback" class="pastebin">
    <input type="hidden" name="language" value="PythonConsole">
    <input type="hidden" name="title"
      value="ImproperlyConfigured at /v2/service_instances/553b98be-caec-4d93-8941-0ce496ab2804">
    <input type="hidden" name="source" value="Django Dpaste Agent">
    <input type="hidden" name="poster" value="Django">
    <textarea name="content" id="traceback_area" cols="140" rows="25">
Environment:


Request Method: PUT
Request URL: http://service-broker.bosh-lite.com/v2/service_instances/553b98be-caec-4d93-8941-0ce496ab2804?accepts_incomplete=true

Django Version: 1.9.6
Python Version: 3.5.5
Installed Applications:
[&#39;django.contrib.admin&#39;,
 &#39;django.contrib.auth&#39;,
 &#39;django.contrib.contenttypes&#39;,
 &#39;django.contrib.sessions&#39;,
 &#39;django.contrib.messages&#39;,
 &#39;django.contrib.staticfiles&#39;,
 &#39;rest_framework&#39;,
 &#39;brokerApp&#39;]
Installed Middleware:
[&#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,
 &#39;django.middleware.common.CommonMiddleware&#39;,
 &#39;django.middleware.csrf.CsrfViewMiddleware&#39;,
 &#39;django.contrib.auth.middleware.AuthenticationMiddleware&#39;,
 &#39;django.contrib.auth.middleware.SessionAuthenticationMiddleware&#39;,
 &#39;django.contrib.messages.middleware.MessageMiddleware&#39;,
 &#39;django.middleware.clickjacking.XFrameOptionsMiddleware&#39;]



Traceback:

File "/home/vcap/deps/0/python/lib/python3.5/site-packages/django/core/handlers/base.py" in get_response
  149.                     response = self.process_exception_by_middleware(e, request)

File "/home/vcap/deps/0/python/lib/python3.5/site-packages/django/core/handlers/base.py" in get_response
  147.                     response = wrapped_callback(request, *callback_args, **callback_kwargs)

File "/home/vcap/deps/0/python/lib/python3.5/site-packages/django/views/decorators/csrf.py" in wrapped_view
  58.         return view_func(*args, **kwargs)

File "/home/vcap/deps/0/python/lib/python3.5/site-packages/django/views/generic/base.py" in view
  68.             return self.dispatch(request, *args, **kwargs)

File "/home/vcap/deps/0/python/lib/python3.5/site-packages/rest_framework/views.py" in dispatch
  466.             response = self.handle_exception(exc)

File "/home/vcap/deps/0/python/lib/python3.5/site-packages/rest_framework/views.py" in dispatch
  463.             response = handler(request, *args, **kwargs)

File "/home/vcap/deps/0/python/lib/python3.5/site-packages/rest_framework/decorators.py" in handler
  53.             return func(*args, **kwargs)

File "/home/vcap/app/brokerApp/views.py" in createServiceInstance
  52. 	if serializer.is_valid():

File "/home/vcap/deps/0/python/lib/python3.5/site-packages/rest_framework/serializers.py" in is_valid
  213.                 self._validated_data = self.run_validation(self.initial_data)

File "/home/vcap/deps/0/python/lib/python3.5/site-packages/rest_framework/serializers.py" in run_validation
  407.         value = self.to_internal_value(data)

File "/home/vcap/deps/0/python/lib/python3.5/site-packages/rest_framework/serializers.py" in to_internal_value
  431.         fields = self._writable_fields

File "/home/vcap/deps/0/python/lib/python3.5/site-packages/django/utils/functional.py" in __get__
  33.         res = instance.__dict__[self.name] = self.func(instance)

File "/home/vcap/deps/0/python/lib/python3.5/site-packages/rest_framework/serializers.py" in _writable_fields
  346.             field for field in self.fields.values()

File "/home/vcap/deps/0/python/lib/python3.5/site-packages/rest_framework/serializers.py" in fields
  339.             for key, value in self.get_fields().items():

File "/home/vcap/deps/0/python/lib/python3.5/site-packages/rest_framework/serializers.py" in get_fields
  939.                 field_name, info, model, depth

File "/home/vcap/deps/0/python/lib/python3.5/site-packages/rest_framework/serializers.py" in build_field
  1076.         return self.build_unknown_field(field_name, model_class)

File "/home/vcap/deps/0/python/lib/python3.5/site-packages/rest_framework/serializers.py" in build_unknown_field
  1182.             (field_name, model_class.__name__)

Exception Type: ImproperlyConfigured at /v2/service_instances/553b98be-caec-4d93-8941-0ce496ab2804
Exception Value: Field name `service_instance_id` is not valid for model `ServiceRecord`.
</textarea>
  <br><br>
  <input type="submit" value="Share this traceback on a public website">
  </div>
</form>
</div>



<div id="requestinfo">
  <h2>Request information</h2>


  <h3 id="get-info">GET</h3>
  
    <table class="req">
      <thead>
        <tr>
          <th>Variable</th>
          <th>Value</th>
        </tr>
      </thead>
      <tbody>
        
          <tr>
            <td>accepts_incomplete</td>
            <td class="code"><pre>&#39;true&#39;</pre></td>
          </tr>
        
      </tbody>
    </table>
  

  <h3 id="post-info">POST</h3>
  
    <p>No POST data</p>
  
  <h3 id="files-info">FILES</h3>
  
    <p>No FILES data</p>
  


  <h3 id="cookie-info">COOKIES</h3>
  
    <p>No cookie data</p>
  

  <h3 id="meta-info">META</h3>
  <table class="req">
    <thead>
      <tr>
        <th>Variable</th>
        <th>Value</th>
      </tr>
    </thead>
    <tbody>
      
        <tr>
          <td>HTTP_HOST</td>
          <td class="code"><pre>&#39;service-broker.bosh-lite.com&#39;</pre></td>
        </tr>
      
        <tr>
          <td>REQUEST_METHOD</td>
          <td class="code"><pre>&#39;PUT&#39;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_X_VCAP_REQUEST_ID</td>
          <td class="code"><pre>&#39;7735bd22-5528-466c-45a6-91d604755284&#39;</pre></td>
        </tr>
      
        <tr>
          <td>PATH_INFO</td>
          <td class="code"><pre>&#39;/v2/service_instances/553b98be-caec-4d93-8941-0ce496ab2804&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_PROTOCOL</td>
          <td class="code"><pre>&#39;HTTP/1.1&#39;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_AUTHORIZATION</td>
          <td class="code"><pre>&#39;Basic dGVzdDp0ZXN0&#39;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.input</td>
          <td class="code"><pre>&lt;gunicorn.http.body.Body object at 0x7f0029f01ba8&gt;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.run_once</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SCRIPT_NAME</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.file_wrapper</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_SOFTWARE</td>
          <td class="code"><pre>&#39;gunicorn/19.4.5&#39;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_X_API_INFO_LOCATION</td>
          <td class="code"><pre>&#39;api.bosh-lite.com/v2/info&#39;</pre></td>
        </tr>
      
        <tr>
          <td>gunicorn.socket</td>
          <td class="code"><pre>&lt;socket.socket fd=11, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=(&#39;10.255.91.65&#39;, 8080), raddr=(&#39;10.244.0.34&#39;, 58328)&gt;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_X_B3_SPANID</td>
          <td class="code"><pre>&#39;d2da9fbd814a5e25&#39;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_DATE</td>
          <td class="code"><pre>&#39;Tue, 15 May 2018 10:42:31 GMT&#39;</pre></td>
        </tr>
      
        <tr>
          <td>REMOTE_PORT</td>
          <td class="code"><pre>&#39;58328&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_PORT</td>
          <td class="code"><pre>&#39;8080&#39;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_ACCEPT</td>
          <td class="code"><pre>&#39;application/json&#39;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_X_REQUEST_START</td>
          <td class="code"><pre>&#39;1526380951015&#39;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_X_FORWARDED_FOR</td>
          <td class="code"><pre>&#39;10.244.0.135&#39;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_CONNECTION</td>
          <td class="code"><pre>&#39;close&#39;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.version</td>
          <td class="code"><pre>(1, 0)</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.errors</td>
          <td class="code"><pre>&lt;gunicorn.http.wsgi.WSGIErrorsWrapper object at 0x7f0029f019b0&gt;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_X_CF_APPLICATIONID</td>
          <td class="code"><pre>&#39;c61112b7-e20b-4cc5-93fd-0683cd373c15&#39;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.url_scheme</td>
          <td class="code"><pre>&#39;http&#39;</pre></td>
        </tr>
      
        <tr>
          <td>REMOTE_ADDR</td>
          <td class="code"><pre>&#39;10.244.0.34&#39;</pre></td>
        </tr>
      
        <tr>
          <td>QUERY_STRING</td>
          <td class="code"><pre>&#39;accepts_incomplete=true&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CONTENT_TYPE</td>
          <td class="code"><pre>&#39;application/json&#39;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.multiprocess</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_NAME</td>
          <td class="code"><pre>&#39;0.0.0.0&#39;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.multithread</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_X_CF_INSTANCEINDEX</td>
          <td class="code"><pre>&#39;0&#39;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_X_BROKER_API_VERSION</td>
          <td class="code"><pre>&#39;2.13&#39;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_X_FORWARDED_PROTO</td>
          <td class="code"><pre>&#39;http&#39;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_USER_AGENT</td>
          <td class="code"><pre>&#39;HTTPClient/1.0 (2.8.3, ruby 2.4.2 (2017-09-14))&#39;</pre></td>
        </tr>
      
        <tr>
          <td>RAW_URI</td>
          <td class="code"><pre>&#39;/v2/service_instances/553b98be-caec-4d93-8941-0ce496ab2804?accepts_incomplete=true&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CONTENT_LENGTH</td>
          <td class="code"><pre>&#39;366&#39;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_X_CF_INSTANCEID</td>
          <td class="code"><pre>&#39;75692249-b801-47d9-676e-3b87&#39;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_X_B3_TRACEID</td>
          <td class="code"><pre>&#39;d2da9fbd814a5e25&#39;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_X_BROKER_API_ORIGINATING_IDENTITY</td>
          <td class="code"><pre>(&#39;cloudfoundry &#39;
 &#39;eyJ1c2VyX2lkIjoiM2ZhZTU4OWQtYzNkMi00NjVhLTk2ODEtMGRlOTAyNzIxOTViIn0=&#39;)</pre></td>
        </tr>
      
    </tbody>
  </table>


  <h3 id="settings-info">Settings</h3>
  <h4>Using settings module <code>broker.settings</code></h4>
  <table class="req">
    <thead>
      <tr>
        <th>Setting</th>
        <th>Value</th>
      </tr>
    </thead>
    <tbody>
      
        <tr>
          <td>ALLOWED_INCLUDE_ROOTS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>PREPEND_WWW</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>WSGI_APPLICATION</td>
          <td class="code"><pre>&#39;broker.wsgi.application&#39;</pre></td>
        </tr>
      
        <tr>
          <td>PASSWORD_RESET_TIMEOUT_DAYS</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_ENGINE</td>
          <td class="code"><pre>&#39;django.contrib.sessions.backends.db&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CACHES</td>
          <td class="code"><pre>{&#39;default&#39;: {&#39;BACKEND&#39;: &#39;django.core.cache.backends.locmem.LocMemCache&#39;}}</pre></td>
        </tr>
      
        <tr>
          <td>TEST_NON_SERIALIZED_APPS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>SILENCED_SYSTEM_CHECKS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>DATETIME_INPUT_FORMATS</td>
          <td class="code"><pre>[&#39;%!!(MISSING)Y(MISSING)-%!!(MISSING)m(MISSING)-%!!(MISSING)d(MISSING) %!!(MISSING)H(MISSING):%!!(MISSING)M(MISSING):%!!(MISSING)S(MISSING)&#39;,
 &#39;%!!(MISSING)Y(MISSING)-%!!(MISSING)m(MISSING)-%!!(MISSING)d(MISSING) %!!(MISSING)H(MISSING):%!!(MISSING)M(MISSING):%!!(MISSING)S(MISSING).%!!(MISSING)f(MISSING)&#39;,
 &#39;%!!(MISSING)Y(MISSING)-%!!(MISSING)m(MISSING)-%!!(MISSING)d(MISSING) %!!(MISSING)H(MISSING):%!!(MISSING)M(MISSING)&#39;,
 &#39;%!!(MISSING)Y(MISSING)-%!!(MISSING)m(MISSING)-%!!(MISSING)d(MISSING)&#39;,
 &#39;%!!(MISSING)m(MISSING)/%!!(MISSING)d(MISSING)/%!!(MISSING)Y(MISSING) %!!(MISSING)H(MISSING):%!!(MISSING)M(MISSING):%!!(MISSING)S(MISSING)&#39;,
 &#39;%!!(MISSING)m(MISSING)/%!!(MISSING)d(MISSING)/%!!(MISSING)Y(MISSING) %!!(MISSING)H(MISSING):%!!(MISSING)M(MISSING):%!!(MISSING)S(MISSING).%!!(MISSING)f(MISSING)&#39;,
 &#39;%!!(MISSING)m(MISSING)/%!!(MISSING)d(MISSING)/%!!(MISSING)Y(MISSING) %!!(MISSING)H(MISSING):%!!(MISSING)M(MISSING)&#39;,
 &#39;%!!(MISSING)m(MISSING)/%!!(MISSING)d(MISSING)/%!!(MISSING)Y(MISSING)&#39;,
 &#39;%!!(MISSING)m(MISSING)/%!!(MISSING)d(MISSING)/%!!(MISSING)y(MISSING) %!!(MISSING)H(MISSING):%!!(MISSING)M(MISSING):%!!(MISSING)S(MISSING)&#39;,
 &#39;%!!(MISSING)m(MISSING)/%!!(MISSING)d(MISSING)/%!!(MISSING)y(MISSING) %!!(MISSING)H(MISSING):%!!(MISSING)M(MISSING):%!!(MISSING)S(MISSING).%!!(MISSING)f(MISSING)&#39;,
 &#39;%!!(MISSING)m(MISSING)/%!!(MISSING)d(MISSING)/%!!(MISSING)y(MISSING) %!!(MISSING)H(MISSING):%!!(MISSING)M(MISSING)&#39;,
 &#39;%!!(MISSING)m(MISSING)/%!!(MISSING)d(MISSING)/%!!(MISSING)y(MISSING)&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>FIRST_DAY_OF_WEEK</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>TEMPLATE_STRING_IF_INVALID</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>USE_X_FORWARDED_HOST</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_STORAGE</td>
          <td class="code"><pre>&#39;django.contrib.staticfiles.storage.StaticFilesStorage&#39;</pre></td>
        </tr>
      
        <tr>
          <td>AUTH_PASSWORD_VALIDATORS</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>AUTH_USER_MODEL</td>
          <td class="code"><pre>&#39;auth.User&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_CACHE_ALIAS</td>
          <td class="code"><pre>&#39;default&#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_PORT</td>
          <td class="code"><pre>25</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_EXPIRE_AT_BROWSER_CLOSE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_SAVE_EVERY_REQUEST</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGES_BIDI</td>
          <td class="code"><pre>[&#39;he&#39;, &#39;ar&#39;, &#39;fa&#39;, &#39;ur&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>DEBUG_PROPAGATE_EXCEPTIONS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_CONTENT_TYPE_NOSNIFF</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECRET_KEY</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DATETIME_FORMAT</td>
          <td class="code"><pre>&#39;N j, Y, P&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>THOUSAND_SEPARATOR</td>
          <td class="code"><pre>&#39;,&#39;</pre></td>
        </tr>
      
        <tr>
          <td>USE_X_FORWARDED_PORT</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_SSL_HOST</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>INTERNAL_IPS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>USE_ETAGS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>TEMPLATE_DIRS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_CONTENT_TYPE</td>
          <td class="code"><pre>&#39;text/html&#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_TIMEOUT</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>USE_TZ</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>FORMAT_MODULE_PATH</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>MIGRATION_MODULES</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>DATABASES</td>
          <td class="code"><pre>{&#39;default&#39;: {&#39;ATOMIC_REQUESTS&#39;: False,
             &#39;AUTOCOMMIT&#39;: True,
             &#39;CONN_MAX_AGE&#39;: 0,
             &#39;ENGINE&#39;: &#39;django.db.backends.postgresql&#39;,
             &#39;HOST&#39;: &#39;10.53.219.114&#39;,
             &#39;NAME&#39;: &#39;servicebroker&#39;,
             &#39;OPTIONS&#39;: {},
             &#39;PASSWORD&#39;: &#39;********************&#39;,
             &#39;PORT&#39;: 5432,
             &#39;TEST&#39;: {&#39;CHARSET&#39;: None,
                      &#39;COLLATION&#39;: None,
                      &#39;MIRROR&#39;: None,
                      &#39;NAME&#39;: None},
             &#39;TIME_ZONE&#39;: None,
             &#39;USER&#39;: &#39;broker&#39;}}</pre></td>
        </tr>
      
        <tr>
          <td>DECIMAL_SEPARATOR</td>
          <td class="code"><pre>&#39;.&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_NAME</td>
          <td class="code"><pre>&#39;sessionid&#39;</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_DIRECTORY_PERMISSIONS</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>TIME_ZONE</td>
          <td class="code"><pre>&#39;UTC&#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_SSL</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>ADMINS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>STATIC_URL</td>
          <td class="code"><pre>&#39;/static/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>NUMBER_GROUPING</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>YEAR_MONTH_FORMAT</td>
          <td class="code"><pre>&#39;F Y&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_HTTPONLY</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>MIDDLEWARE_CLASSES</td>
          <td class="code"><pre>[&#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,
 &#39;django.middleware.common.CommonMiddleware&#39;,
 &#39;django.middleware.csrf.CsrfViewMiddleware&#39;,
 &#39;django.contrib.auth.middleware.AuthenticationMiddleware&#39;,
 &#39;django.contrib.auth.middleware.SessionAuthenticationMiddleware&#39;,
 &#39;django.contrib.messages.middleware.MessageMiddleware&#39;,
 &#39;django.middleware.clickjacking.XFrameOptionsMiddleware&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>DATE_INPUT_FORMATS</td>
          <td class="code"><pre>[&#39;%!!(MISSING)Y(MISSING)-%!!(MISSING)m(MISSING)-%!!(MISSING)d(MISSING)&#39;,
 &#39;%!!(MISSING)m(MISSING)/%!!(MISSING)d(MISSING)/%!!(MISSING)Y(MISSING)&#39;,
 &#39;%!!(MISSING)m(MISSING)/%!!(MISSING)d(MISSING)/%!!(MISSING)y(MISSING)&#39;,
 &#39;%!!(MISSING)b(MISSING) %!!(MISSING)d(MISSING) %!!(MISSING)Y(MISSING)&#39;,
 &#39;%!!(MISSING)b(MISSING) %!!(MISSING)d(MISSING), %!!(MISSING)Y(MISSING)&#39;,
 &#39;%!!(MISSING)d(MISSING) %!!(MISSING)b(MISSING) %!!(MISSING)Y(MISSING)&#39;,
 &#39;%!!(MISSING)d(MISSING) %!!(MISSING)b(MISSING), %!!(MISSING)Y(MISSING)&#39;,
 &#39;%!!(MISSING)B(MISSING) %!!(MISSING)d(MISSING) %!!(MISSING)Y(MISSING)&#39;,
 &#39;%!!(MISSING)B(MISSING) %!!(MISSING)d(MISSING), %!!(MISSING)Y(MISSING)&#39;,
 &#39;%!!(MISSING)d(MISSING) %!!(MISSING)B(MISSING) %!!(MISSING)Y(MISSING)&#39;,
 &#39;%!!(MISSING)d(MISSING) %!!(MISSING)B(MISSING), %!!(MISSING)Y(MISSING)&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_SECONDS</td>
          <td class="code"><pre>600</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_FILE_STORAGE</td>
          <td class="code"><pre>&#39;django.core.files.storage.FileSystemStorage&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_EXCEPTION_REPORTER_FILTER</td>
          <td class="code"><pre>&#39;django.views.debug.SafeExceptionReporterFilter&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_AGE</td>
          <td class="code"><pre>1209600</pre></td>
        </tr>
      
        <tr>
          <td>LOGOUT_URL</td>
          <td class="code"><pre>&#39;/accounts/logout/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>USE_L10N</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>ABSOLUTE_URL_OVERRIDES</td>
          <td class="code"><pre>{}</pre></td>
        </tr>
      
        <tr>
          <td>INSTALLED_APPS</td>
          <td class="code"><pre>[&#39;django.contrib.admin&#39;,
 &#39;django.contrib.auth&#39;,
 &#39;django.contrib.contenttypes&#39;,
 &#39;django.contrib.sessions&#39;,
 &#39;django.contrib.messages&#39;,
 &#39;django.contrib.staticfiles&#39;,
 &#39;rest_framework&#39;,
 &#39;brokerApp&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>MEDIA_URL</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>TEMPLATE_LOADERS</td>
          <td class="code"><pre>[&#39;django.template.loaders.filesystem.Loader&#39;,
 &#39;django.template.loaders.app_directories.Loader&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_NAME</td>
          <td class="code"><pre>&#39;csrftoken&#39;</pre></td>
        </tr>
      
        <tr>
          <td>MESSAGE_STORAGE</td>
          <td class="code"><pre>&#39;django.contrib.messages.storage.fallback.FallbackStorage&#39;</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_PERMISSIONS</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_SSL_REDIRECT</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_HEADER_NAME</td>
          <td class="code"><pre>&#39;HTTP_X_CSRFTOKEN&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_EMAIL</td>
          <td class="code"><pre>&#39;root@localhost&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_SECURE</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>FIXTURE_DIRS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>LOGIN_REDIRECT_URL</td>
          <td class="code"><pre>&#39;/accounts/profile/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>IGNORABLE_404_URLS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_SECONDS</td>
          <td class="code"><pre>0</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_FROM_EMAIL</td>
          <td class="code"><pre>&#39;webmaster@localhost&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SETTINGS_MODULE</td>
          <td class="code"><pre>&#39;broker.settings&#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST_PASSWORD</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_FINDERS</td>
          <td class="code"><pre>[&#39;django.contrib.staticfiles.finders.FileSystemFinder&#39;,
 &#39;django.contrib.staticfiles.finders.AppDirectoriesFinder&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_REDIRECT_EXEMPT</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_SERIALIZER</td>
          <td class="code"><pre>&#39;django.contrib.sessions.serializers.JSONSerializer&#39;</pre></td>
        </tr>
      
        <tr>
          <td>USE_THOUSAND_SEPARATOR</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SUBJECT_PREFIX</td>
          <td class="code"><pre>&#39;[Django] &#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST</td>
          <td class="code"><pre>&#39;localhost&#39;</pre></td>
        </tr>
      
        <tr>
          <td>LOGGING_CONFIG</td>
          <td class="code"><pre>&#39;logging.config.dictConfig&#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_HOST_USER</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>MONTH_DAY_FORMAT</td>
          <td class="code"><pre>&#39;F j&#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_USE_TLS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_INDEX_TABLESPACE</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_TABLESPACE</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>TEMPLATE_CONTEXT_PROCESSORS</td>
          <td class="code"><pre>[&#39;django.contrib.auth.context_processors.auth&#39;,
 &#39;django.template.context_processors.debug&#39;,
 &#39;django.template.context_processors.i18n&#39;,
 &#39;django.template.context_processors.media&#39;,
 &#39;django.template.context_processors.static&#39;,
 &#39;django.template.context_processors.tz&#39;,
 &#39;django.contrib.messages.context_processors.messages&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_BROWSER_XSS_FILTER</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>FILE_CHARSET</td>
          <td class="code"><pre>&#39;utf-8&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_HTTPONLY</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>LOGIN_URL</td>
          <td class="code"><pre>&#39;/accounts/login/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>MANAGERS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_FAILURE_VIEW</td>
          <td class="code"><pre>&#39;django.views.csrf.csrf_failure&#39;</pre></td>
        </tr>
      
        <tr>
          <td>BASE_DIR</td>
          <td class="code"><pre>&#39;/home/vcap/app&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DATE_FORMAT</td>
          <td class="code"><pre>&#39;N j, Y&#39;</pre></td>
        </tr>
      
        <tr>
          <td>LOCALE_PATHS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_PATH</td>
          <td class="code"><pre>&#39;/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_ALIAS</td>
          <td class="code"><pre>&#39;default&#39;</pre></td>
        </tr>
      
        <tr>
          <td>STATICFILES_DIRS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_AGE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>MEDIA_ROOT</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SHORT_DATETIME_FORMAT</td>
          <td class="code"><pre>&#39;m/d/Y P&#39;</pre></td>
        </tr>
      
        <tr>
          <td>TIME_INPUT_FORMATS</td>
          <td class="code"><pre>[&#39;%!!(MISSING)H(MISSING):%!!(MISSING)M(MISSING):%!!(MISSING)S(MISSING)&#39;, &#39;%!!(MISSING)H(MISSING):%!!(MISSING)M(MISSING):%!!(MISSING)S(MISSING).%!!(MISSING)f(MISSING)&#39;, &#39;%!!(MISSING)H(MISSING):%!!(MISSING)M(MISSING)&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>CACHE_MIDDLEWARE_KEY_PREFIX</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>LOGGING</td>
          <td class="code"><pre>{&#39;disable_existing_loggers&#39;: False,
 &#39;handlers&#39;: {&#39;file&#39;: {&#39;class&#39;: &#39;logging.FileHandler&#39;,
                       &#39;filename&#39;: &#39;logs/broker.log&#39;,
                       &#39;level&#39;: &#39;DEBUG&#39;}},
 &#39;loggers&#39;: {&#39;django&#39;: {&#39;handlers&#39;: [&#39;file&#39;],
                        &#39;level&#39;: &#39;DEBUG&#39;,
                        &#39;propagate&#39;: True}},
 &#39;version&#39;: 1}</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SSL_CERTFILE</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>APPEND_SLASH</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_TRUSTED_ORIGINS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>TEMPLATE_DEBUG</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>ROOT_URLCONF</td>
          <td class="code"><pre>&#39;broker.urls&#39;</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_AGE</td>
          <td class="code"><pre>31449600</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGES</td>
          <td class="code"><pre>[(&#39;af&#39;, &#39;Afrikaans&#39;),
 (&#39;ar&#39;, &#39;Arabic&#39;),
 (&#39;ast&#39;, &#39;Asturian&#39;),
 (&#39;az&#39;, &#39;Azerbaijani&#39;),
 (&#39;bg&#39;, &#39;Bulgarian&#39;),
 (&#39;be&#39;, &#39;Belarusian&#39;),
 (&#39;bn&#39;, &#39;Bengali&#39;),
 (&#39;br&#39;, &#39;Breton&#39;),
 (&#39;bs&#39;, &#39;Bosnian&#39;),
 (&#39;ca&#39;, &#39;Catalan&#39;),
 (&#39;cs&#39;, &#39;Czech&#39;),
 (&#39;cy&#39;, &#39;Welsh&#39;),
 (&#39;da&#39;, &#39;Danish&#39;),
 (&#39;de&#39;, &#39;German&#39;),
 (&#39;el&#39;, &#39;Greek&#39;),
 (&#39;en&#39;, &#39;English&#39;),
 (&#39;en-au&#39;, &#39;Australian English&#39;),
 (&#39;en-gb&#39;, &#39;British English&#39;),
 (&#39;eo&#39;, &#39;Esperanto&#39;),
 (&#39;es&#39;, &#39;Spanish&#39;),
 (&#39;es-ar&#39;, &#39;Argentinian Spanish&#39;),
 (&#39;es-co&#39;, &#39;Colombian Spanish&#39;),
 (&#39;es-mx&#39;, &#39;Mexican Spanish&#39;),
 (&#39;es-ni&#39;, &#39;Nicaraguan Spanish&#39;),
 (&#39;es-ve&#39;, &#39;Venezuelan Spanish&#39;),
 (&#39;et&#39;, &#39;Estonian&#39;),
 (&#39;eu&#39;, &#39;Basque&#39;),
 (&#39;fa&#39;, &#39;Persian&#39;),
 (&#39;fi&#39;, &#39;Finnish&#39;),
 (&#39;fr&#39;, &#39;French&#39;),
 (&#39;fy&#39;, &#39;Frisian&#39;),
 (&#39;ga&#39;, &#39;Irish&#39;),
 (&#39;gd&#39;, &#39;Scottish Gaelic&#39;),
 (&#39;gl&#39;, &#39;Galician&#39;),
 (&#39;he&#39;, &#39;Hebrew&#39;),
 (&#39;hi&#39;, &#39;Hindi&#39;),
 (&#39;hr&#39;, &#39;Croatian&#39;),
 (&#39;hu&#39;, &#39;Hungarian&#39;),
 (&#39;ia&#39;, &#39;Interlingua&#39;),
 (&#39;id&#39;, &#39;Indonesian&#39;),
 (&#39;io&#39;, &#39;Ido&#39;),
 (&#39;is&#39;, &#39;Icelandic&#39;),
 (&#39;it&#39;, &#39;Italian&#39;),
 (&#39;ja&#39;, &#39;Japanese&#39;),
 (&#39;ka&#39;, &#39;Georgian&#39;),
 (&#39;kk&#39;, &#39;Kazakh&#39;),
 (&#39;km&#39;, &#39;Khmer&#39;),
 (&#39;kn&#39;, &#39;Kannada&#39;),
 (&#39;ko&#39;, &#39;Korean&#39;),
 (&#39;lb&#39;, &#39;Luxembourgish&#39;),
 (&#39;lt&#39;, &#39;Lithuanian&#39;),
 (&#39;lv&#39;, &#39;Latvian&#39;),
 (&#39;mk&#39;, &#39;Macedonian&#39;),
 (&#39;ml&#39;, &#39;Malayalam&#39;),
 (&#39;mn&#39;, &#39;Mongolian&#39;),
 (&#39;mr&#39;, &#39;Marathi&#39;),
 (&#39;my&#39;, &#39;Burmese&#39;),
 (&#39;nb&#39;, &#39;Norwegian Bokmal&#39;),
 (&#39;ne&#39;, &#39;Nepali&#39;),
 (&#39;nl&#39;, &#39;Dutch&#39;),
 (&#39;nn&#39;, &#39;Norwegian Nynorsk&#39;),
 (&#39;os&#39;, &#39;Ossetic&#39;),
 (&#39;pa&#39;, &#39;Punjabi&#39;),
 (&#39;pl&#39;, &#39;Polish&#39;),
 (&#39;pt&#39;, &#39;Portuguese&#39;),
 (&#39;pt-br&#39;, &#39;Brazilian Portuguese&#39;),
 (&#39;ro&#39;, &#39;Romanian&#39;),
 (&#39;ru&#39;, &#39;Russian&#39;),
 (&#39;sk&#39;, &#39;Slovak&#39;),
 (&#39;sl&#39;, &#39;Slovenian&#39;),
 (&#39;sq&#39;, &#39;Albanian&#39;),
 (&#39;sr&#39;, &#39;Serbian&#39;),
 (&#39;sr-latn&#39;, &#39;Serbian Latin&#39;),
 (&#39;sv&#39;, &#39;Swedish&#39;),
 (&#39;sw&#39;, &#39;Swahili&#39;),
 (&#39;ta&#39;, &#39;Tamil&#39;),
 (&#39;te&#39;, &#39;Telugu&#39;),
 (&#39;th&#39;, &#39;Thai&#39;),
 (&#39;tr&#39;, &#39;Turkish&#39;),
 (&#39;tt&#39;, &#39;Tatar&#39;),
 (&#39;udm&#39;, &#39;Udmurt&#39;),
 (&#39;uk&#39;, &#39;Ukrainian&#39;),
 (&#39;ur&#39;, &#39;Urdu&#39;),
 (&#39;vi&#39;, &#39;Vietnamese&#39;),
 (&#39;zh-hans&#39;, &#39;Simplified Chinese&#39;),
 (&#39;zh-hant&#39;, &#39;Traditional Chinese&#39;)]</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_MAX_MEMORY_SIZE</td>
          <td class="code"><pre>2621440</pre></td>
        </tr>
      
        <tr>
          <td>USE_I18N</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_COOKIE_NAME</td>
          <td class="code"><pre>&#39;django_language&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_DOMAIN</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>X_FRAME_OPTIONS</td>
          <td class="code"><pre>&#39;SAMEORIGIN&#39;</pre></td>
        </tr>
      
        <tr>
          <td>TEMPLATES</td>
          <td class="code"><pre>[{&#39;APP_DIRS&#39;: True,
  &#39;BACKEND&#39;: &#39;django.template.backends.django.DjangoTemplates&#39;,
  &#39;DIRS&#39;: [],
  &#39;OPTIONS&#39;: {&#39;context_processors&#39;: [&#39;django.template.context_processors.debug&#39;,
                                     &#39;django.template.context_processors.request&#39;,
                                     &#39;django.contrib.auth.context_processors.auth&#39;,
                                     &#39;django.contrib.messages.context_processors.messages&#39;]}}]</pre></td>
        </tr>
      
        <tr>
          <td>PASSWORD_HASHERS</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_COOKIE_PATH</td>
          <td class="code"><pre>&#39;/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_HANDLERS</td>
          <td class="code"><pre>[&#39;django.core.files.uploadhandler.MemoryFileUploadHandler&#39;,
 &#39;django.core.files.uploadhandler.TemporaryFileUploadHandler&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>TEST_RUNNER</td>
          <td class="code"><pre>&#39;django.test.runner.DiscoverRunner&#39;</pre></td>
        </tr>
      
        <tr>
          <td>REST_FRAMEWORK</td>
          <td class="code"><pre>{&#39;DEFAULT_AUTHENTICATION_CLASSES&#39;: (),
 &#39;DEFAULT_RENDERER_CLASSES&#39;: (&#39;rest_framework.renderers.JSONRenderer&#39;,)}</pre></td>
        </tr>
      
        <tr>
          <td>DEBUG</td>
          <td class="code"><pre>True</pre></td>
        </tr>
      
        <tr>
          <td>PROJECT_ROOT</td>
          <td class="code"><pre>&#39;/home/vcap/app/broker&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SESSION_FILE_PATH</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>AUTHENTICATION_BACKENDS</td>
          <td class="code"><pre>[&#39;django.contrib.auth.backends.ModelBackend&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_HSTS_INCLUDE_SUBDOMAINS</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>FORCE_SCRIPT_NAME</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>SIGNING_BACKEND</td>
          <td class="code"><pre>&#39;django.core.signing.TimestampSigner&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SECURE_PROXY_SSL_HEADER</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>CSRF_COOKIE_PATH</td>
          <td class="code"><pre>&#39;/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>TIME_FORMAT</td>
          <td class="code"><pre>&#39;P&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SHORT_DATE_FORMAT</td>
          <td class="code"><pre>&#39;m/d/Y&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DISALLOWED_USER_AGENTS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>ALLOWED_HOSTS</td>
          <td class="code"><pre>[&#39;*&#39;]</pre></td>
        </tr>
      
        <tr>
          <td>STATIC_ROOT</td>
          <td class="code"><pre>&#39;/home/vcap/app/broker/staticfiles&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULT_CHARSET</td>
          <td class="code"><pre>&#39;utf-8&#39;</pre></td>
        </tr>
      
        <tr>
          <td>FILE_UPLOAD_TEMP_DIR</td>
          <td class="code"><pre>None</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_BACKEND</td>
          <td class="code"><pre>&#39;django.core.mail.backends.smtp.EmailBackend&#39;</pre></td>
        </tr>
      
        <tr>
          <td>EMAIL_SSL_KEYFILE</td>
          <td class="code"><pre>&#39;********************&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DATABASE_ROUTERS</td>
          <td class="code"><pre>[]</pre></td>
        </tr>
      
        <tr>
          <td>LANGUAGE_CODE</td>
          <td class="code"><pre>&#39;en-us&#39;</pre></td>
        </tr>
      
    </tbody>
  </table>

</div>

  <div id="explanation">
    <p>
      You're seeing this error because you have <code>DEBUG = True</code> in your
      Django settings file. Change that to <code>False</code>, and Django will
      display a standard page generated by the handler for this status code.
    </p>
  </div>

</body>
</html>

